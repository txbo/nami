{
  "name": "root",
  "private": true,
  "workspaces": [
    "packages/*"
  ],
  "devDependencies": {
    "@babel/plugin-transform-runtime": "^7.14.5",
    "@babel/preset-env": "^7.14.7",
    "@commitlint/cli": "^12.1.4",
    "@commitlint/config-lerna-scopes": "^12.1.4",
    "@rollup/plugin-commonjs": "^19.0.0",
    "@rollup/plugin-json": "^4.1.0",
    "@rollup/plugin-node-resolve": "^13.0.0",
    "@tsconfig/node12": "^1.0.9",
    "@types/html-minifier-terser": "^5.1.1",
    "@types/inquirer": "^7.3.2",
    "@types/jest": "^26.0.24",
    "@types/koa": "^2.13.1",
    "@types/koa-bodyparser": "^4.3.0",
    "@types/koa-compose": "^3.2.5",
    "@types/koa-static": "^4.0.1",
    "@types/koa__router": "^8.0.4",
    "@types/lodash": "^4.14.170",
    "@types/mockjs": "^1.0.3",
    "@types/node": "^15.12.5",
    "@types/rimraf": "^3.0.0",
    "@types/shelljs": "^0.8.8",
    "@types/supertest": "^2.0.11",
    "@typescript-eslint/eslint-plugin": "^4.28.1",
    "core-js": "^3.15.2",
    "eslint": "^7.29.0",
    "eslint-config-standard-with-typescript": "^20.0.0",
    "eslint-plugin-import": "^2.23.4",
    "eslint-plugin-json": "^3.0.0",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-promise": "^4.3.1",
    "fetch-ponyfill": "^7.1.0",
    "husky": "^7.0.0",
    "jest": "^27.0.6",
    "koa": "^2.13.1",
    "lerna": "^4.0.0",
    "lint-staged": "^11.0.0",
    "rimraf": "^3.0.2",
    "rollup": "^2.53.3",
    "rollup-plugin-babel": "^4.4.0",
    "rollup-plugin-clear": "^2.0.7",
    "rollup-plugin-peer-deps-external": "^2.2.4",
    "rollup-plugin-typescript2": "^0.30.0",
    "rollup-plugin-uglify": "^6.0.4",
    "supertest": "^6.1.3",
    "ts-jest": "^27.0.3",
    "ts-node": "^10.1.0",
    "typescript": "^4.3.5",
    "typescript-transform-paths": "^3.0.1"
  },
  "husky": {
    "hooks": {
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
    }
  },
  "lint-staged": {
    "*.{js,ts,jsx,tsx}": "eslint --cache --fix"
  },
  "publishConfig": {
    "registry": "http://r.npm.sankuai.com"
  },
  "scripts": {
    "prepare": "husky install",
    "build": "lerna run build",
    "publish": "branch=$(git rev-parse --symbolic-full-name --abbrev-ref HEAD); if [[ $branch == \"master\" ]]; then lerna publish; else echo \"your current branch is not master!\" && exit 1; fi;",
    "test": "jest --coverage",
    "clean": "rm -rf packages/**/dist && lerna clean"
  }
}
